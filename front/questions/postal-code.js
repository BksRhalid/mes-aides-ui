require('whatwg-fetch');
import objectPath from 'object-path-immutable';

import store from '../store';
import {
    createOpenfiscaSituationUpdateAction,
    createAsyncStartAction,
    createAsyncEndAction,
    createSuggestResultsAction,
    createErrorAction,
} from '../actions';

const INSEE_CODE_PROPERTY_PATH = 'menages.0.depcom';


/**
 * @param {String} property  Property path of the OpenFisca situation.
 * @param {String} postalCode  The postal code entered by the user.
 * @return {Action} A Redux action to be dispatched to the store.
 */
export function update(property, postalCode) {
    handleAPICall(
        window.fetch(`https://apicarto.sgmap.fr/codes-postaux/communes/${postalCode}`)
    ).catch(console.error.bind(console));

    return createAsyncStartAction();
}

/**
 * Handler for API call.
 * @param  {Promise} apiCallPromise The promise generated by a call to the fetch API.
 * @return {Promise} A promise chain from the passed initial promise.
 */
export function handleAPICall(apiCallPromise) {
    return apiCallPromise
        .then(response => {
            store.dispatch(createAsyncEndAction());
            return response.json();
        }, error => {
            store.dispatch(createAsyncEndAction());
            store.dispatch(createErrorAction(property, 'communication', postalCode, error));
            return [];
        }).then(matchingCommunes => {
            if (matchingCommunes.length == 1)
                return store.dispatch(updateDepCom(matchingCommunes[0].codeInsee));

            store.dispatch(createSuggestResultsAction(matchingCommunes));
            store.dispatch(updateDepCom(null));
        });
}

/**
 * Set INSEE code in OpenFisca situation.
 * @param  {String} depcom http://legislation.openfisca.fr/variables/depcom
 * @return {Action} A Redux action to be dispatched to the store.
 */
function updateDepCom(depcom) {
    const situation = objectPath.set(store.getState().openfiscaSituation, INSEE_CODE_PROPERTY_PATH, depcom);

    return createOpenfiscaSituationUpdateAction(situation);
}
